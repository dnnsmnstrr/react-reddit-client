{"version":3,"sources":["components/Votes.jsx","components/TitleAndMetadata.jsx","components/Thumbnail.jsx","components/Video.jsx","components/Post.jsx","consts.js","components/SubReddit.jsx","components/AppBar.jsx","components/App.jsx","index.js"],"names":["upvoteColor","downvoteColor","root","css","_templateObject","iconButtonCss","_templateObject2","VoteState","UPVOTE","NO_VOTE","DOWNVOTE","Votes","props","_useState","useState","_useState2","Object","slicedToArray","voteState","setVoteState","handleVote","nextState","currentColor","getColorByState","makeButtonCss","desiredButtonState","_templateObject3","upButtonCss","downButtonCss","textCss","_templateObject4","core_browser_esm","index_es","aria-label","onClick","ExpandLess_default","a","variant","votes","ExpandMore_default","TitleAndMetadata_templateObject","title","TitleAndMetadata_templateObject2","TitleAndMetadata","_ref","post","postLink","concat","permalink","href","target","rel","he","decode","subreddit_name_prefixed","thumbnail","Thumbnail_templateObject","Thumbnail","assign","alt","video","Video_templateObject","Video","src","muted","loop","poster","autoPlay","controls","Post_templateObject","card","Post_templateObject2","cardContent","Post_templateObject3","sourceImg","Post_templateObject4","exapnd","_templateObject5","collapse","_templateObject6","collapseContent","_templateObject7","Post","expanded","setExpanded","handleExpanded","hasThumbnail","startsWith","hasImage","some","ext","url","endsWith","hasText","selftext","length","hasVideo","media","reddit_video","fallback_url","canExpand","in","timeout","components_Votes","ups","components_Thumbnail","height","thumbnail_height","components_TitleAndMetadata","aria-expanded","unmountOnExit","components_Video","react_markdown_default","source","redditUrl","SubReddit_templateObject","centeredProgress","SubReddit_templateObject2","bigProgress","SubReddit_templateObject3","ErrorDisplay","gutterBottom","error","message","SubReddit","posts","setPosts","_useState3","_useState4","loadingPosts","setLoadingPosts","_useState5","_useState6","lastRequestResult","setLastRequestResult","_useState7","_useState8","setError","_useState9","_useState10","loadingMore","setLoadingMore","requestUrl","subreddit","requestResToPosts","res","data","children","map","obj","useEffect","axios","get","then","catch","err","after","morePosts","prevPosts","handleScroll","el","document","getElementById","getBoundingClientRect","bottom","window","innerHeight","addEventListener","removeEventListener","components_Post","key","id","SubReddit_ErrorDisplay","withStyles","theme","width","grow","flexGrow","menuButton","marginLeft","marginRight","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","classes","react_default","createElement","className","AppBar_default","Toolbar_default","IconButton_default","Menu_default","Typography_default","noWrap","ArrowRightAlt_default","InputBase_default","placeholder","input","onChange","onSubredditChange","createMuiTheme","primary","main","red","typography","useNextVariants","content","App_templateObject","global","App_templateObject2","App","setSubreddit","StylesProvider","injectFirst","core_styles","styles","components_AppBar","event","value","components_SubReddit","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.58fa509d.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { useState } from \"react\";\r\nimport { jsx, css } from \"@emotion/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, IconButton } from \"@material-ui/core\";\r\nimport UpVote from \"@material-ui/icons/ExpandLess\";\r\nimport DownVote from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst upvoteColor = \"#FF8b60\";\r\nconst downvoteColor = \"#9494FF\";\r\n\r\nconst root = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  margin: auto 4% auto 0;\r\n`;\r\nconst iconButtonCss = css`\r\n  padding: 7px 0;\r\n`;\r\n\r\nconst VoteState = {\r\n  UPVOTE: 1,\r\n  NO_VOTE: 0,\r\n  DOWNVOTE: -1\r\n};\r\n\r\nfunction getColorByState(voteState) {\r\n  switch (voteState) {\r\n    case VoteState.UPVOTE:\r\n      return upvoteColor;\r\n    case VoteState.DOWNVOTE:\r\n      return downvoteColor;\r\n    default:\r\n      return 'inherit';\r\n  }\r\n}\r\n\r\nfunction Votes(props) {\r\n  const [voteState, setVoteState] = useState(VoteState.NO_VOTE);\r\n\r\n  const handleVote = nextState => () => {\r\n    if (nextState === voteState) setVoteState(VoteState.NO_VOTE);\r\n    else setVoteState(nextState);\r\n  };\r\n\r\n  const currentColor = getColorByState(voteState);\r\n  const makeButtonCss = desiredButtonState => css`\r\n    ${iconButtonCss};\r\n    color: ${voteState === desiredButtonState ? currentColor : 'inherit'};\r\n  `;\r\n  const upButtonCss = makeButtonCss(VoteState.UPVOTE);\r\n  const downButtonCss = makeButtonCss(VoteState.DOWNVOTE);\r\n  const textCss = css`\r\n    color: ${currentColor};\r\n  `;\r\n  return (\r\n    <div css={root}>\r\n      <IconButton\r\n        css={upButtonCss} aria-label=\"Upvote\" \r\n        onClick={handleVote(VoteState.UPVOTE)}\r\n      >\r\n        <UpVote />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h5\" css={textCss}>\r\n        {props.votes + voteState}\r\n      </Typography>\r\n\r\n      <IconButton\r\n        css={downButtonCss} aria-label=\"Downvote\"\r\n        onClick={handleVote(VoteState.DOWNVOTE)}\r\n      >\r\n        <DownVote />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nVotes.propTypes = {\r\n  votes: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Votes;\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport PropTypes from \"prop-types\";\r\nimport {Typography} from '@material-ui/core';\r\nimport he from 'he';\r\n\r\nconst root = css`\r\n  margin: auto 0;\r\n  h4 {\r\n    font-size: 12pt;\r\n  }\r\n`;\r\nconst title = css`\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nfunction TitleAndMetadata({post}) {\r\n  const postLink = `https://www.reddit.com${post.permalink}`;\r\n\r\n  return (\r\n    <div css={root}>\r\n      <Typography variant=\"h5\" css={title}>\r\n        <a href={postLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {he.decode(post.title)}\r\n        </a>\r\n      </Typography>\r\n      <div>\r\n        <Typography variant='h4'>\r\n          {post.subreddit_name_prefixed}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitleAndMetadata.propTypes = {\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TitleAndMetadata;","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst thumbnail = css`\r\n  margin: auto 4% auto 0;\r\n  width: auto;\r\n  max-height: 7em;\r\n  padding: 1em 0;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction Thumbnail(props){\r\n  return (\r\n    <img alt='thumbnail' css={thumbnail} {...props} />\r\n  );\r\n}\r\n\r\nThumbnail.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Thumbnail;","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst video = css`\r\n  max-height: 30em;\r\n`;\r\n\r\nfunction Video({src}) {\r\n  return (\r\n    <video muted loop poster autoPlay controls css={video}>\r\n      <source src={src}/>\r\n    </video>\r\n  );\r\n}\r\n\r\nVideo.propTypes = {\r\n  src: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Video;","/** @jsx jsx */\r\nimport { useState } from 'react';\r\nimport { jsx, css } from '@emotion/core';\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Typography, IconButton, Collapse, Grow } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Markdown from 'react-markdown';\r\nimport Votes from \"./Votes\";\r\nimport TitleAndMetadata from \"./TitleAndMetadata\";\r\nimport Thumbnail from './Thumbnail';\r\nimport Video from './Video';\r\n\r\nconst root = css`\r\n  h5 {\r\n    font-size: 13pt;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n`;\r\nconst card = css`\r\n  min-width: 275px;\r\n  margin: 1em auto;\r\n`;\r\nconst cardContent = css`\r\n  display: flex;\r\n  padding: 0.5em 3%;\r\n`;\r\nconst sourceImg = css`\r\n  max-height: 30em;\r\n  margin: auto 0;\r\n  display: block;\r\n`;\r\nconst exapnd = css`\r\n  height: fit-content;\r\n  margin: auto 0 auto auto;\r\n`;\r\nconst collapse = css`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst collapseContent = css`\r\n  padding: 1em 2em;\r\n`;\r\n\r\nfunction Post({ post }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpanded = () => setExpanded(!expanded);\r\n  \r\n  const hasThumbnail = post.thumbnail.startsWith('http');\r\n  const hasImage = ['.jpg', '.gif', '.png']\r\n                  .some(ext => post.url.endsWith(ext));\r\n  const hasText = post.selftext && post.selftext.length > 0;\r\n  // const hasVideo = post.is_video;\r\n  const hasVideo = post.media && post.media.reddit_video && \r\n    post.media.reddit_video.fallback_url;\r\n  const canExpand = (hasImage || hasText || hasVideo);\r\n  \r\n  return (\r\n    <Grow in={true} css={root} timeout={800}>\r\n      <Card css={card}>\r\n        <div css={cardContent}>\r\n          <Votes votes={post.ups} />\r\n          {hasThumbnail && \r\n          <Thumbnail src={post.thumbnail} \r\n            height={post.thumbnail_height} onClick={handleExpanded} />}\r\n          <TitleAndMetadata post={post}/>\r\n          {canExpand && \r\n          <IconButton css={exapnd} onClick={handleExpanded} aria-expanded={expanded}>\r\n            <ExpandMoreIcon/>\r\n          </IconButton>}\r\n        </div>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit css={collapse}>\r\n          {hasImage && \r\n          <img src={post.url} alt='source' css={sourceImg}/>}\r\n          {hasVideo && <Video src={post.media.reddit_video.fallback_url}/>}\r\n          <div css={collapseContent}>\r\n            {hasText && \r\n            <Typography variant='h5'>\r\n              <Markdown source={post.selftext}/>\r\n            </Typography>}\r\n          </div>\r\n        </Collapse>\r\n      </Card>\r\n    </Grow>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Post;\r\n","export const redditUrl = 'https://www.reddit.com';","/** @jsx jsx */\r\nimport { useState, useEffect } from \"react\";\r\nimport { jsx, css } from '@emotion/core';\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Typography, CircularProgress } from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport { redditUrl } from '../consts';\r\n\r\nconst root = css`\r\n  margin: 2em 7%;\r\n`;\r\nconst centeredProgress = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`;\r\nconst bigProgress = css`\r\n  ${centeredProgress};\r\n  width: 8em !important;\r\n  height: 8em !important;\r\n  margin-top: 3em;\r\n`;\r\n\r\nconst ErrorDisplay = props => (\r\n  <Typography variant=\"h3\" gutterBottom>\r\n    Error Occured: {props.error.message}\r\n  </Typography>\r\n);\r\n\r\nErrorDisplay.propTypes = {\r\n  error: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SubReddit(props) {\r\n  const [posts, setPosts] = useState(null);\r\n  const [loadingPosts, setLoadingPosts] = useState(false);\r\n  const [lastRequestResult, setLastRequestResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const filter = 'top';\r\n  const requestUrl = `${redditUrl}/r/${props.subreddit}/${filter}.json`;\r\n  // Transform the raw data by extracting the nested posts\r\n  const requestResToPosts = res => res.data.data.children.map(obj => obj.data);\r\n\r\n  // Loading posts on subreddit or filter change\r\n  useEffect(() => {\r\n    setLoadingPosts(true);\r\n    axios\r\n      .get(requestUrl)\r\n      .then(res => {\r\n        const posts = requestResToPosts(res);\r\n        setLoadingPosts(false);\r\n        setLastRequestResult(res.data.data);\r\n        setError(null);\r\n        setPosts(posts);\r\n      })\r\n      .catch(err => {\r\n        setLoadingPosts(false);\r\n        setError(err);\r\n        setPosts(null);\r\n      });\r\n  }, [props.subreddit, requestUrl]);\r\n  \r\n  // Loading more posts when scrolled to the bottom of the page\r\n  useEffect(() => {\r\n    if (loadingMore && !loadingPosts && lastRequestResult.after) {\r\n      const after = lastRequestResult.after;\r\n      axios\r\n        .get(requestUrl + '?after=' + after)\r\n        .then(res => {\r\n          const morePosts = requestResToPosts(res);\r\n          setPosts(prevPosts => prevPosts && prevPosts.concat(morePosts));\r\n          setLastRequestResult(res.data.data);\r\n          setLoadingMore(false);\r\n        })\r\n        .catch(() => {\r\n          setLoadingMore(false);\r\n        });\r\n    } else {\r\n      setLoadingMore(false);\r\n    }\r\n  }, [loadingMore, lastRequestResult, loadingPosts, requestUrl]);\r\n\r\n  // Setting the scroll event listener \r\n  useEffect(() => {\r\n    function handleScroll() {\r\n      const el = document.getElementById('root');\r\n      if (!loadingMore && \r\n          el.getBoundingClientRect().bottom <= window.innerHeight) {\r\n        setLoadingMore(true);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [loadingMore]);\r\n\r\n  return (\r\n    <div css={root}>\r\n      <Typography variant=\"h2\" gutterBottom>\r\n        {`/r/${props.subreddit}`}\r\n      </Typography>\r\n      {loadingPosts && <CircularProgress css={bigProgress} />}\r\n      {posts && posts.map(post => <Post post={post} key={post.id} />)}\r\n      {error && <ErrorDisplay error={error} />}\r\n      {loadingMore && <CircularProgress css={centeredProgress}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nSubReddit.propTypes = {\r\n  subreddit: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SubReddit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\nfunction SearchAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            React Reddit Client\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Go to subreddit\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onChange={props.onSubredditChange}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onSubredditChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SearchAppBar);\r\n","/** @jsx jsx */\r\nimport { useState } from 'react';\r\nimport { Global, jsx, css } from \"@emotion/core\";\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nimport SubReddit from './SubReddit';\r\nimport AppBar from './AppBar';\r\n// import CollapseDemo from './CollapseDemo';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {main: red[800]}\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst content = css`\r\n  margin-top: 5em;\r\n`;\r\nconst global = css`\r\n  body {\r\n    margin: 0\r\n  }\r\n`;\r\n\r\n\r\nfunction App() {\r\n  const [subreddit, setSubreddit] = useState(\"all\");\r\n  function handleSubChange(event) {\r\n    setSubreddit(event.target.value)\r\n  }\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <MuiThemeProvider theme={theme}>\r\n        <Global styles={global}/>\r\n        <AppBar onSubredditChange={handleSubChange}/>\r\n        <div css={content}>\r\n          <SubReddit subreddit={subreddit}/>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}